name: EditMode CI (Self-Hosted)

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  editmode-tests:
    name: Unity EditMode Tests (Self-Hosted)
    runs-on: [self-hosted, Windows]
    env:
      UNITY_VERSION: 6000.1.14f1   # change if you update your local Unity

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Allow inline PowerShell scripts in this job (no admin needed)
      - name: Allow PowerShell scripts (process scope)
        shell: powershell
        run: Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass -Force

      - name: Prepare workspace
        shell: powershell
        run: |
          $ErrorActionPreference = 'Stop'
          $Results = Join-Path "${{ github.workspace }}" "TestResults"
          if (Test-Path $Results) { Remove-Item $Results -Recurse -Force }
          New-Item -ItemType Directory -Force -Path $Results | Out-Null

      - name: Run Unity EditMode Tests
        shell: powershell
        run: |
          $ErrorActionPreference = 'Stop'
          $UnityExe   = "C:\Program Files\Unity\Hub\Editor\$env:UNITY_VERSION\Editor\Unity.exe"
          if (!(Test-Path $UnityExe)) {
            Write-Error "‚ùå Unity not found at $UnityExe. Check version or install path."
            exit 1
          }

          $ProjectPath = "${{ github.workspace }}"
          $ResultsDir  = Join-Path $ProjectPath "TestResults"
          $LogFile     = Join-Path $ResultsDir  "EditModeLog.txt"
          $XmlFile     = Join-Path $ResultsDir  "EditModeResults.xml"

          & "$UnityExe" -batchmode -nographics -quit `
            -projectPath "$ProjectPath" `
            -runTests -testPlatform EditMode `
            -logfile "$LogFile" `
            -testResults "$XmlFile"

          if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: EditModeResults
          path: TestResults/
